---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ include "fdpg.fullname" . }}"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    {{ if .Values.service.tlsEnabled }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{ else }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{ end }}
    {{ if ne .Values.appConfig.environment.env "prod" }}
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    {{ end }}
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "16"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-body-size: "25m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      server_tokens off;
  labels:
  {{- include "fdpg.labels" . | nindent 4 }}
spec:
  {{ if .Values.service.tlsEnabled }}
  tls:
  - hosts:
      - {{.Values.appConfig.ingressUrl}}
    {{ if eq .Values.appConfig.environment.env "prod" }}
    secretName: {{.Values.global.productionCertificateName}}
    {{ else }}
    secretName: "letsencrypt-{{ .Chart.Name }}-{{ .Values.appConfig.environment.env }}"
    {{ end }}
  {{ end }}
  rules:
    - host: {{.Values.appConfig.ingressUrl}}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ .Chart.Name }}-service"
                port:
                  number: {{ .Values.service.port }}
